#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,2.5))
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=0.333)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=0.333)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
ex3g<-ex3g[1:251,]
plot(ex3g$time,ex3g$onsetcurve,type='l')
t<-ex3g$time
y<-ex3g$onsetcurve
T <- 5.00
dt <- 1/fs #s
n <- T/dt
F <-1/dt
df <- 1/T
t <- seq(0,T,by=dt) #also try ts function
length(t)
length(ex3g$time)
max(ex3g$time)
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
f<-f/ (df/dt/T*2)
max(f)*df
s <- f*df
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
phase <- atan(Im(Y)/Re(Y))
Yr <- Re(Y)
Yi <- Im(Y)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,2.5))
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
f<-f/ (df/dt/T*4)
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
phase <- atan(Im(Y)/Re(Y))
Yr <- Re(Y)
Yi <- Im(Y)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,2.5))
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,0.5))
### OWN EXAMPLE
fs <- 50
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=0.75)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=0.2)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
ex3g<-ex3g[1:251,]
plot(ex3g$time,ex3g$onsetcurve,type='l')
t<-ex3g$time
y<-ex3g$onsetcurve
T <- 5.00
dt <- 1/fs #s
n <- T/dt
F <-1/dt
df <- 1/T
t <- seq(0,T,by=dt) #also try ts function
length(t)
length(ex3g$time)
max(ex3g$time)
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
f<-f/ (df/dt/T*4)
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
phase <- atan(Im(Y)/Re(Y))
Yr <- Re(Y)
Yi <- Im(Y)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,2.5))
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
phase <- atan(Im(Y)/Re(Y))
Yr <- Re(Y)
Yi <- Im(Y)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,2.5))
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
f<-f/ (df/dt/T*1)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,2.5))
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
f<-f/ (df/dt/T*2)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue',xlim = c(0,2.5))
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue')
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue')
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue')
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=1)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
ex3g<-ex3g[1:251,]
plot(ex3g$time,ex3g$onsetcurve,type='l')
t<-ex3g$time
y<-ex3g$onsetcurve
T <- 5.00
dt <- 1/fs #s
n <- T/dt
F <-1/dt
df <- 1/T
t <- seq(0,T,by=dt) #also try ts function
length(t)
length(ex3g$time)
max(ex3g$time)
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
phase <- atan(Im(Y)/Re(Y))
Yr <- Re(Y)
Yi <- Im(Y)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue')
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue'xlim = c(0,2.5))
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,2.5))
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,10))
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[2:length(f)/2],mag[2:length(f)/2],type='l',col='blue', xlim = c(0,10))
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,10))
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.1)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
ex3g<-ex3g[1:251,]
plot(ex3g$time,ex3g$onsetcurve,type='l')
t<-ex3g$time
y<-ex3g$onsetcurve
T <- 5.00
dt <- 1/fs #s
n <- T/dt
F <-1/dt
df <- 1/T
t <- seq(0,T,by=dt) #also try ts function
length(t)
length(ex3g$time)
max(ex3g$time)
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
phase <- atan(Im(Y)/Re(Y))
Yr <- Re(Y)
Yi <- Im(Y)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,10))
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,1))
### OWN EXAMPLE
fs <- 50
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.6)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.6)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.8)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.4)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.250)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
ex3g<-ex3g[1:251,]
plot(ex3g$time,ex3g$onsetcurve,type='l')
t<-ex3g$time
y<-ex3g$onsetcurve
T <- 5.00
dt <- 1/fs #s
n <- T/dt
F <-1/dt
df <- 1/T
t <- seq(0,T,by=dt) #also try ts function
length(t)
length(ex3g$time)
max(ex3g$time)
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
phase <- atan(Im(Y)/Re(Y))
Yr <- Re(Y)
Yi <- Im(Y)
#PLOTTING
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,10))
x<-c(4,8)
x
1/x
x/1
1/x
x
x-4/4
(x-4)/4
(x-2)/4
(x-2)/8
x
###
y<-tmp_g$onsetcurve[400:800]
Fs<-250
tmp_g <- gaussify_onsets(tmp$onset, sr = sampling_rate,time = TRUE)
plot(tmp_g$time[400:800],tmp_g$onsetcurve[400:800],type='l')
###
y<-tmp_g$onsetcurve[400:800]
Fs<-250
N = length(y);
f1=fft(y)
#FOURIER TRANSFORM WORK
T <- 20
dt <- 0.01 #s
n <- T/dt
n
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.250)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
ex3g<-ex3g[1:251,]
plot(ex3g$time,ex3g$onsetcurve,type='l')
t<-ex3g$time
y<-ex3g$onsetcurve
T <- 5.00
dt <- 1/fs #s
n <- T/dt
n
ex3g
### OWN EXAMPLE
fs <- 50
ex3 <- seq(0,5,by=.250)
ex3g <-gaussify_onsets(ex3,sr = fs)
ex3g
ex3g<-ex3g[1:251,]
ex3g
ex3g<-ex3g[1:251,]
plot(ex3g$time,ex3g$onsetcurve,type='l')
t<-ex3g$time
y<-ex3g$onsetcurve
T <- 5.00
dt <- 1/fs #s
n <- T/dt
F <-1/dt
tmp_g <- gaussify_onsets(tmp$onset, sr = sampling_rate,time = TRUE)
plot(tmp_g$time[400:800],tmp_g$onsetcurve[400:800],type='l')
###
y<-tmp_g$onsetcurve[400:800]
Fs<-250
N = length(y);
f1=fft(y)
fa = seq(0,N-1,by=1)*(Fs/N)
plot(fa,abs(f1),type='l',xlim = c(0,10))
###
y<-tmp_g$onsetcurve[400:800]
plot(y)
length(y)
length(y)*sr
sampling_rate
T <- length(y)*sampling_rate
T
T <- length(y)/sampling_rate
T
dt <- 1/sampling_rate
n <- T/dt
n
length(y)
F <-1/dt
df <- 1/T
t <- seq(0,T,by=dt) #also try ts function
length(t)
length(T)
length(y)
T <- length(y)/sampling_rate
dt <- 1/sampling_rate
n <- T/dt
F <-1/dt
df <- 1/T
t <- seq(0,T,by=dt) #also try ts function
length(t)
length(y)
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
length(f)
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
length(t)
length(y)
dt
t <- seq(0,T-dt,by=dt) #also try ts function
length(t)
length(y)
#CREATE OUR FREQUENCY ARRAY
f <- 1:length(t)/T
f<-f-df
f
length(f)
#FOURIER TRANSFORM WORK
Y <- fft(y)
mag <- sqrt(Re(Y)^2+Im(Y)^2)*2/n
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,10))
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue')
layout(matrix(c(1,2), byrow = TRUE))
plot(t,y,type='l')
plot(f[1:length(f)/2],mag[1:length(f)/2],type='l',col='blue', xlim = c(0,10))
s1=seewave::spec(y,f=Fs,plot = FALSE)
s1<-data.frame(s1)
s1$x<-s1$x*Fs #   (KHz to Hz)
plot(s1$x,s1$y,type='l',xlim = c(0,3))
###
Fs<-250
N = length(y);
f1=fft(y)
fa = seq(0,N-1,by=1)*(Fs/N)
plot(fa,abs(f1),type='l',xlim = c(0,10))
s1=seewave::spec(y,f=Fs,plot = FALSE)
s1<-data.frame(s1)
s1$x<-s1$x*Fs #   (KHz to Hz)
plot(s1$x,s1$y,type='l',xlim = c(0,3))
sampling_rate
###
s1 = seewave::spec(y,f=sampling_rate,plot = FALSE)
s1<-data.frame(s1)
s1$x <- s1$x*sampling_rate #   (KHz to Hz)
plot(s1$x,s1$y,type='l',xlim = c(0,3))
head(s1)
###
Per = seewave::spec(y,f=sampling_rate,plot = FALSE)
Per<-data.frame(Per)
Per$x <- Per$x*sampling_rate #   (KHz to Hz)
plot(Per$x,Per$y,type='l',xlim = c(0,3))
head(Per)
colnames(Per)<-c('Time','Amplitude')
fig <- ggplot2::ggplot(Per, ggplot2::aes(x = Time, y = Ampl)) +
ggplot2::geom_line(colour=colour) +
ggplot2::xlab('Time (s)') +
ggplot2::scale_x_continuous(limits = c(freq_range[1], freq_range[2]),breaks=seq(freq_range[1],freq_range[2],by=0.2)) +
#ggplot2::scale_y_continuous(limits = c(NA,forced_max_ampl))+
ggplot2::ggtitle(title)+
ggplot2::theme_linedraw()+
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
fig
colnames(Per)<-c('Time','Ampl')
fig <- ggplot2::ggplot(Per, ggplot2::aes(x = Time, y = Ampl)) +
ggplot2::geom_line(colour=colour) +
ggplot2::xlab('Time (s)') +
ggplot2::scale_x_continuous(limits = c(freq_range[1], freq_range[2]),breaks=seq(freq_range[1],freq_range[2],by=0.2)) +
#ggplot2::scale_y_continuous(limits = c(NA,forced_max_ampl))+
ggplot2::ggtitle(title)+
ggplot2::theme_linedraw()+
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
fig
#tmp_g$onsetcurve
### revised using seewave
Per = seewave::spec(tmp_g$onsetcurve,f=sampling_rate,plot = FALSE)
Per<-data.frame(Per)
Per$x <- Per$x*sampling_rate #   (KHz to Hz)
plot(Per$x,Per$y,type='l',xlim = c(0,3))
colnames(Per)<-c('Time','Amplitude')
fig <- ggplot2::ggplot(Per, ggplot2::aes(x = Time, y = Amplitude)) +
ggplot2::geom_line(colour=colour) +
ggplot2::xlab('Time (s)') +
ggplot2::scale_x_continuous(limits = c(freq_range[1], freq_range[2]),breaks=seq(freq_range[1],freq_range[2],by=0.2)) +
#ggplot2::scale_y_continuous(limits = c(NA,forced_max_ampl))+
ggplot2::ggtitle(title)+
ggplot2::theme_linedraw()+
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
fig
#tmp_g$onsetcurve
### revised using seewave
plot(tmp_g$time,tmp_g$onsetcurve,type = 'l',col='blue')
#tmp_g$onsetcurve
### revised using seewave
plot(tmp_g$time,tmp_g$onsetcurve,type = 'l',col='blue')
Per = seewave::spec(tmp_g$onsetcurve,f=sampling_rate,plot = FALSE)
Per<-data.frame(Per)
Per$x <- Per$x*sampling_rate #   (KHz to Hz)
plot(Per$x,Per$y,type='l',xlim = c(0,3))
colnames(Per)<-c('Time','Amplitude')
fig <- ggplot2::ggplot(Per, ggplot2::aes(x = Time, y = Amplitude)) +
ggplot2::geom_line(colour=colour) +
ggplot2::xlab('Time (s)') +
ggplot2::scale_x_continuous(limits = c(freq_range[1], freq_range[2]),breaks=seq(freq_range[1],freq_range[2],by=0.2)) +
#ggplot2::scale_y_continuous(limits = c(NA,forced_max_ampl))+
ggplot2::ggtitle(title)+
ggplot2::theme_linedraw()+
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
head(Per)
ignore_acf_lower
Per <- dplyr::filter(Per, Time >= ignore_acf_lower)
fig <- ggplot2::ggplot(Per, ggplot2::aes(x = Time, y = Amplitude)) +
ggplot2::geom_line(colour=colour) +
ggplot2::xlab('Time (s)') +
ggplot2::scale_x_continuous(limits = c(freq_range[1], freq_range[2]),breaks=seq(freq_range[1],freq_range[2],by=0.2)) +
#ggplot2::scale_y_continuous(limits = c(NA,forced_max_ampl))+
ggplot2::ggtitle(title)+
ggplot2::theme_linedraw()+
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
fig

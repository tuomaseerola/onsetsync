setwd("~/Desktop/Martins_R_scripts")
setwd("~/Desktop/Martins_R_scripts")
asere <- read.csv("Asere_OU_2.csv")
names(asere)
library(dplyr)
str(asere)
asere %>% as_tibble() %>% mutate(
ave = Clave+Bass
)
names(asere)
asere %>% as_tibble() %>% mutate(
aver = Clave+Bass
)
asere$aver
asere %>% as_tibble() %>% mutate(
aver = Mean(Clave,Bass,na.rm=T)
)
asere %>% as_tibble() %>% mutate(
summarise(m=mean(Clave,Bass,na.rm=T))
)
mean(asere$Bass,asere$Bongo)
asere %>% as_tibble() %>% mutate(
summarise(m=rowmean(Clave,Bass,na.rm=T))
)
asere %>% summarise(funs(mean))
names(asere)
asere %>%
#  mutate(STUFF=sample(STUFF,replace= TRUE), STUFF2 = sample(STUFF2,replace= TRUE))%>%
rowwise() %>%
mutate(Mean = mean(c(Bass,Guitar)))
asere$Mean
asere %>%
#  mutate(STUFF=sample(STUFF,replace= TRUE), STUFF2 = sample(STUFF2,replace= TRUE))%>%
rowwise() %>%
mutate(Mean = mean(c(Bass,Guitar,na.rm=T)))
asere$Mean
asere %>%
group_by(SD) %>%
#  mutate(STUFF=sample(STUFF,replace= TRUE), STUFF2 = sample(STUFF2,replace= TRUE))%>%
rowwise() %>%
mutate(ME = mean(c(Bass,Guitar,na.rm=T)))
asere$ME
names(asere)
asere%>%
group_by(Piece) %>%
ungroup() %>%
mutate(ME = rowMeans(.[,16:17]))
asere$ME
asere %>%
group_by(Piece) %>%
ungroup() %>%
mutate(ME = rowMeans(.[,16:17],na.rm=T))
asere$ME
asere %>%
#  group_by(Piece) %>%
#  ungroup() %>%
mutate(ME = rowMeans(.[,16:17],na.rm=T))
names(asere)
N<-names(asere)
N
N[12:17]
asere %>%
#  group_by(Piece) %>%
#  ungroup() %>%
mutate(GrandMean = rowMeans(.[,12:17],na.rm=T))
asere %>%
#  group_by(Piece) %>%
#  ungroup() %>%
mutate(ME = rowMeans(.[,12:17],na.rm=T))
dim(asere)
names(asere)
asere %>%
#  group_by(Piece) %>%
#  ungroup() %>%
mutate(ME = rowMeans(.[,12:17],na.rm=T)) %>% asere2
asere %>%
#  group_by(Piece) %>%
ungroup() %>%
mutate(ME = rowMeans(.[,12:17],na.rm=T))
names(asere)
asere %>%
group_by(Piece) %>%
ungroup() %>%
mutate(ME = rowMeans(.[,12:13],na.rm=T))
asere$ME
asere %>%
#  group_by(Piece) %>%
ungroup() %>%
mutate(ME = rowMeans(.[,12:13],na.rm=T))
asere
names(asere)
asere %>%
rowwise() %>%
mutate(c=mean(c(Bass,Bongo)))
asere$c
my_rowmeans = function(...) Reduce(`+`, list(...))/length(list(...))
asere %>% mutate(M = my_rowmeans(Clave, Bass))
names(asere)
asere %>%
mutate(c= rowMeans(data.frame(Clave,Bell)))
asere %>%
mutate(c= rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
asere$c %>%
mutate(c= rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
asere %>%
mutate(c= rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
mutate(asere, c= rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
names(asere)
dplyr::mutate(asere, grmean = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
asere<-as_tibble(asere)
dplyr::mutate(asere, grmean = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
asere %>%
mutate(grmean2 = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
asere<-as_tibble(asere)
asere %>%
mutate(grmean2 = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
dplyr::mutate(asere, grmean = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
names(asere)
asere<-as_tibble(asere)
dplyr::mutate(asere, grmean = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
names(asere)
mutate(flights,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60
)
library(nycflights13)
setwd("~/Desktop/Martins_R_scripts")
asere <- read.csv("Asere_OU_2.csv")
library(dplyr)
asere<-as_tibble(asere)
mutate(asere, grmean = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
names(asere)
asere<-mutate(asere, grmean = rowMeans(data.frame(Clave,Bell),na.rm=TRUE))
names(asere)
asere<-mutate(asere, grmean = rowMeans(data.frame(Clave,Bass,Guitar,Tres,Bongo,Bell),na.rm=TRUE))
names(asere)
asere
asere$grmean
names(asere)
asere<-mutate(asere, ClaveDif = Clave-grmean)
names(asere)
asere$ClaveDif
asere<-mutate(asere, DifClave = Clave-grmean,DifBass = Bass-grmean,DifGuitar = Guitar-grmean,DifTres = Tres-grmean,DifBongo = Bongo-grmean,DifBell = Bell-grmean)
names(asere)
?princomp
diff_asere<-select_(asere,starts_with("Dif"))
diff_asere<-select(asere,starts_with("Dif"))
head(diff_asere)
dim(diff_asere)
pc <- princomp(~ ., data = diff_asere,na.action = na.exclude, cor = TRUE)
summarise(diff_asere,mean())
mean(diff_asere)
mean(diff_asere,na.rm = T)
mean(diff_asere$DifClave,na.rm = T)
colMeans(diff_asere,na.rm = T)
model_null <- principal(diff_asere,5,cor="poly", rotate="none",fm="minres")
library(psych)
model_null <- principal(diff_asere,5,cor="poly", rotate="none",fm="minres")
model_null <- principal(diff_asere,5, rotate="none",fm="minres")
?principal
model_null <- principal(diff_asere,5, rotate="none",fm="minres",missing = TRUE)
model_null <- principal(diff_asere,5, rotate="none",fm="minres",missing = TRUE,impute = "median")
diff_asere<-select(asere,starts_with("Dif"))
colMeans(diff_asere,na.rm = T)
colMeans(is.na(diff_asere),na.rm = T)
colSums(is.na(diff_asere),na.rm = T)
dim(diff_asere)
diff_asere
colMeans(diff_asere,na.rm = T)
colSums(is.na(diff_asere),na.rm = T)
colSums(is.na(asere),na.rm = T)
table(asere$SD,asere$Clave)
table(asere$SD,is.na(asere$Clave))
table(asere$SD,is.na(asere$Bell))
colSums(is.na(asere),na.rm = T)
diff_asere
diff_asere[is.na(diff_asere)]<-0
model_null <- principal(diff_asere,5, rotate="none",fm="minres",missing = TRUE,impute = "median")
model_null <- principal(diff_asere,3, rotate="none",fm="minres",missing = TRUE,impute = "median")
diff_asere
model_null <- principal(diff_asere,3, rotate="none",fm="minres")
diff_asere
devtools::use_readme_md()
setwd("~/Documents/os")
devtools::use_readme_md()
library(onsetsync)
library(httr)
library(dplyr)
library(ggplot2)
CSS_Song2_Onset <- get_OSF_csv('8a347') # Onsets
knitr::kable(head(CSS_Song2_Onset[,1:8,]),format = "simple",
caption = 'Onset data structure (see text for details).')
CSS_Song2_Metre <- get_OSF_csv('4cdpr') # Annotations
knitr::kable(head(CSS_Song2_Metre[1:4,]),format = ,"simple")
CSS_Song2_Onset <- dplyr::select(CSS_Song2_Onset,
Label.SD,SD,Clave,Bass,Guitar,Tres)
# Add annotations about the cycle to the data frame
CSS_Song2 <- add_annotation(df = CSS_Song2_Onset,
annotation = CSS_Song2_Metre$Cycle,
time = CSS_Song2_Metre$Time,
reference = 'Label.SD')
# Add isochronous beats to the data frame
CSS_Song2 <- add_isobeats(df = CSS_Song2,
instr = 'CycleTime',
beat = 'SD')
print(knitr::kable(head(CSS_Song2),format = "simple",digits = 2))
tab1 <- summarise_onsets(df = CSS_Song2,
instr = c('Clave','Bass','Guitar','Tres'))
print(knitr::kable(tab1,digits = 1,
caption = 'Descriptives for the onset time differences (ms)'))
fig1 <- plot_by_beat(df = CSS_Song2,
instr = c('Bass','Clave','Guitar','Tres'),
beat = 'SD',
virtual='Isochronous.SD.Time',
pcols=2)
print(fig1)
set.seed(1201) # set random seed
N <- 200 # Let's select 200 onsets
d1 <- sync_sample_paired(CSS_Song2,'Clave','Bass',N,1,'SD',TRUE)
print(paste('Mean asynchrony of',round(mean(d1$asynch*1000),1),
'ms & standard deviation of',round(sd(d1$asynch*1000),1),'ms'))
devtools::install_github("tuomaseerola/onsetsync")
packageVersion("onsetsync")
devtools::install_github("tuomaseerola/onsetsync")
library(onsetsync)
packageVersion(onsetsync)
packageVersion("onsetsync")
library(onsetsync)              # to handle onsets
library(dplyr)                  # to handle summaries
corpus <- onsetsync::CSS_IEMP   # Cuban Salsa & Son
D <- sync_sample_paired(corpus,'Bass','Guitar',0,1,'SD')
RES <-summarise(group_by(D$asynch,name),M=mean(asynch*1000))
D2 <- sync_sample_paired(corpus,'Bass','Tres',0,1,'SD')
RES2 <- summarise(group_by(D2$asynch,name),M=mean(asynch*1000))
names(RES)[2] <- 'Bass_Guitar'  # rename for clarity
RES$Bass_Tres <- RES2$M         # rename also
print(RES)
if (!require(devtools)) install.packages("devtools")
devtools::install_github("tuomaseerola/onsetsync")
library(onsetsync)
library(dplyr)
library(ggplot2)
packageVersion("onsetsync")
CSS_Song2 <- onsetsync::CSS_IEMP[[2]]   # Read one song from internal data
CSS_Song2 <- dplyr::select(CSS_Song2,Label.SD,SD,Clave,Bass,Guitar,Tres,
CycleTime,Cycle,Isochronous.SD.Time) # Select some columns
print(knitr::kable(head(CSS_Song2),format = "simple",digits = 2))
fig1 <- plot_by_beat(df = CSS_Song2,
instr = c('Bass','Clave','Guitar','Tres'),
beat = 'SD',
virtual='Isochronous.SD.Time',
pcols=2)
print(fig1)
inst <- c('Clave','Bass','Guitar','Tres') # Define instruments
dn <- sync_execute_pairs(CSS_Song2,inst,0,1,'SD')
fig2 <- plot_by_pair(dn)  # plot
print(fig2)
set.seed(1234) # set random seed
N <- 200 # Let's select 200 onsets
Bootstrap <- 1000
d1 <- sync_sample_paired(CSS_Song2,'Clave','Bass',N,Bootstrap,'SD',TRUE)
print(paste('Mean asynchrony of',round(mean(d1$asynch*1000),1),
'ms & standard deviation of',round(sd(d1$asynch*1000),1),'ms'))
#| echo: true
#| output-location: fragment
per2 <- periodicity(extract,instr='Guitar',method='acf',freq_range=c(0.1,0.6))
#| echo: true
#| output-location: slide
fig2 <- plot_by_beat(df = CSS_Song2,
instr = c('Tres'),
beat = 'SD',
virtual = 'Isochronous.SD.Time',
pcols=1,
griddeviations = TRUE, box = TRUE)
setwd('~/Documents/computational/R/under_dev/onsetsync/')
pkgdown::build_site()
if (!require(devtools)) install.packages("devtools")
devtools::install_github("tuomaseerola/onsetsync",force = TRUE)
library(devtools)
library(roxygen2)
library(usethis)
setwd('~/Documents/computational/R/under_dev/onsetsync/')
pkgdown::build_site()
